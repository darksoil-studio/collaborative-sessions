{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./collaborative-sessions-client.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./session-store.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./types.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/mocks.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CollaborativeSessionsZomeMock",
          "superclass": {
            "name": "ZomeMock",
            "package": "@darksoil-studio/holochain-utils"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CollaborativeSessionsZomeMock",
          "declaration": {
            "name": "CollaborativeSessionsZomeMock",
            "module": "src/mocks.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/collaborative-sessions-client.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CollaborativeSessionsClient",
          "members": [
            {
              "kind": "method",
              "name": "sendPresenceSignal",
              "parameters": [
                {
                  "name": "sessionId",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "peers",
                  "type": {
                    "text": "AgentPubKey[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "sendSessionMessage",
              "parameters": [
                {
                  "name": "sessionId",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "peers",
                  "type": {
                    "text": "AgentPubKey[]"
                  }
                },
                {
                  "name": "message",
                  "type": {
                    "text": "Uint8Array"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "ZomeClient",
            "package": "@darksoil-studio/holochain-utils"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CollaborativeSessionsClient",
          "declaration": {
            "name": "CollaborativeSessionsClient",
            "module": "src/collaborative-sessions-client.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/session-store.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SessionStore",
          "members": [
            {
              "kind": "field",
              "name": "peers",
              "default": "new Signal.State<HoloHashMap<AgentPubKey, PeerState>>( new HoloHashMap(), )"
            },
            {
              "kind": "field",
              "name": "activePeers",
              "default": "new Signal.Computed(() => Array.from(this.peers.get().keys()))"
            },
            {
              "kind": "method",
              "name": "sendMessage",
              "parameters": [
                {
                  "name": "peers",
                  "type": {
                    "text": "AgentPubKey[]"
                  }
                },
                {
                  "name": "message",
                  "type": {
                    "text": "MESSAGES"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "leave"
            }
          ],
          "superclass": {
            "name": "EventEmitter",
            "package": "eventemitter3"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SessionStore",
          "declaration": {
            "name": "SessionStore",
            "module": "src/session-store.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/utils.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "effect",
          "parameters": [
            {
              "name": "cb",
              "type": {
                "text": "() => void"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "effect",
          "declaration": {
            "name": "effect",
            "module": "src/utils.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "locales/locales.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "sourceLocale",
          "default": "`en`",
          "description": "The locale code that templates in this source code are written in."
        },
        {
          "kind": "variable",
          "name": "targetLocales",
          "type": {
            "text": "array"
          },
          "default": "[ , ]",
          "description": "The other locale codes that this application is localized into. Sorted\nlexicographically."
        },
        {
          "kind": "variable",
          "name": "allLocales",
          "type": {
            "text": "array"
          },
          "default": "[ `en`, ]",
          "description": "All valid project locale codes. Sorted lexicographically."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "sourceLocale",
          "declaration": {
            "name": "sourceLocale",
            "module": "locales/locales.js"
          }
        },
        {
          "kind": "js",
          "name": "targetLocales",
          "declaration": {
            "name": "targetLocales",
            "module": "locales/locales.js"
          }
        },
        {
          "kind": "js",
          "name": "allLocales",
          "declaration": {
            "name": "allLocales",
            "module": "locales/locales.js"
          }
        }
      ]
    }
  ]
}
